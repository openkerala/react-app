pipeline {
  agent any
  stages {
    stage ('Cleanup') {
      steps {
        deleteDir()
      }
    }

    stage ('Notify Slack') {
      steps {
        slackSend channel: "#jenkins", message: "Build Started: ${env.JOB_NAME} ${env.BUILD_NUMBER}"
      }
    }

    stage ('Checkout SCM') {
      steps {
        checkout([$class: 'GitSCM',
        branches: [[name: 'develop']],
        doGenerateSubmoduleConfigurations: false,
        extensions: [[$class: 'CleanCheckout']],
        submoduleCfg: [],
        userRemoteConfigs: [[credentialsId: 'jenkins-github', url: 'https://github.com/openkerala/react-app.git']]
        ])
      }
    }

    stage ('NPM install') {
      agent {
        docker {
          image 'node:8.11.3-alpine'
          args '-v ${WORKSPACE}/sample/test-app:/opt -u root'
          reuseNode true
          label 'npm-sample'
        }
      }
      steps {
        sh '''ls -ltr'''
        sh '''cd sample/test-app && npm install'''
      }
    }

    stage ('NPM Test') {
      agent {
        docker {
          image 'node:8.11.3-alpine'
          reuseNode true
          label 'npm-sample'
        }
      }
      steps {
        sh '''cd sample/test-app && npm run test'''
      }
    }

    stage ('NPM Build') {
      agent {
        docker {
          image 'node:8.11.3-alpine'
          reuseNode true
          label 'npm-sample'
        }
      }
      steps {
        sh '''cd sample/test-app && npm run build'''
      }
    }

    stage ('Code Deploy') {
      agent any
      steps {
        sh '''cp -R sample/test-app/build/* /var/www/html/'''
      }
    }

  }
  post {
    always {
      cleanWs()
    }
    failure {
      slackSend channel: "#jenkins", message: "Build Failed: ${env.JOB_NAME} ${env.BUILD_NUMBER}"
    }
    success {
      slackSend channel: "#jenkins", message: "Build Success: ${env.JOB_NAME} ${env.BUILD_NUMBER}"
    }
  }
}
